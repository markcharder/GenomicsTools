#!/usr/bin/env perl

# Converts gff3 and fasta sequence to a fasta of sequences contained in the gff3 file. Works with coding quarry gff3 output.
# Has not been tested on other gff3s.
# Required bioperl.

use strict;
use warnings;
use Getopt::Long;
use Bio::DB::Fasta;
use Bio::Seq;
use Bio::SeqIO;

my $gff = "";
my $fasta = "";
my $prefix = "out";

my $usage = <<USAGE;


	Script to convert gff and fasta sequence to fasta of annotations. Works with Coding Quarry gff3 output only.

	$0 --gff <gff> --fasta <fasta> [--prefix <output prefix> (defaults to 'out')]
USAGE

GetOptions("gff=s" => \$gff, "fasta=s" => \$fasta, "prefix=s" => \$prefix);

if (($gff eq "") or ($fasta eq "")){
	die ("\nPlease specify fasta and gff3 files.\n$usage\n");
}

my $outfile_cds = Bio::SeqIO->new( -format => 'fasta', -file => ">$prefix.fasta" );
my $db = Bio::DB::Fasta->new($fasta);

my $id;
my $strand;
my %cds;
my $chr;

open my $fh, "<", $gff or die ("\nCheck gff file\n$usage\n");
while (my $line = <$fh>){
	chomp $line;
	my @fields	= split /\s+/, $line;
	my @attrs	= split ";", $fields[8];
	if ($. == 1){
		$id	= $attrs[0];
		$id	=~ s/ID=//g;
		$strand	= $fields[6];
		$chr	= $fields[0];
		next;
	}
	if ($fields[2] eq "gene"){
		my $merged_cds;
	foreach my $key (sort {$cds{$a} <=> $cds{$b}} keys %cds){
	my $cds_seq = $db->seq($chr, $key, $cds{$key});
	$merged_cds .= $cds_seq;
	}
	my $cds_output = Bio::Seq->new(	-seq		=> $merged_cds,
					-id		=> $id,
					-display_id	=> $id,
					-alphabet	=> 'dna'	);
	if ($strand eq "-"){
		$cds_output = $cds_output->revcom();
	}
	$outfile_cds->write_seq($cds_output);
	$id = $attrs[0];
	$id =~ s/ID=//g;
	$chr = $fields[0];
	$strand = $fields[6];
	$merged_cds = "";
	undef %cds;
	}
	else{
	$cds{$fields[3]} = $fields[4];
	}
	if (eof($fh)){
		my $merged_cds;
	foreach my $key (sort {$cds{$a} <=> $cds{$b}} keys %cds){
		my $cds_seq = $db->seq($chr, $key, $cds{$key});
		$merged_cds .= $cds_seq;
	}
	my $cds_output = Bio::Seq->new(	-seq		=> $merged_cds,
					-id		=> $id,
					-display_id	=> $id,
					-alphabet	=> 'dna',	);
	if ($strand eq "-"){
		$cds_output = $cds_output->revcom();
	}
	$outfile_cds->write_seq($cds_output);
	}
}
close $fh;
